# backend/utils.py

import torch
from torchvision import transforms
from PIL import Image

# Define labels (must match your training labels)
classes = ['rainy', 'dark', 'clear']

# Preprocessing for image
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
])

# Try to load model safely
try:
    model = torch.load("weather_model.pt", map_location=torch.device('cpu'))
    model.eval()
except Exception as e:
    print(f"Warning: Could not load weather model: {e}")
    model = None

def detect_weather(image_path):
    """
    Predict weather condition from image.
    """
    if model is None:
        return "Not available (model not loaded)"
    
    image = Image.open(image_path).convert("RGB")
    input_tensor = transform(image).unsqueeze(0)

    with torch.no_grad():
        output = model(input_tensor)
        pred = output.argmax(1).item()

    return classes[pred]
